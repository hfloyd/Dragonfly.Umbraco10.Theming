@inherits UmbracoViewPage<IPublishedContent>
@{
	Layout = null;

	var currentPage = Model;
	var thisTheme = currentPage.Value<string>("Theme", fallback: Fallback.ToAncestors);
	var templateFilePath = ThemeHelper.GetThemeViewPath(thisTheme, currentPage.GetTemplateAlias());

	//Examples of Bundling using Smidge
	SmidgeHelper.CreateCssBundle($"{thisTheme}-master-css-bundle")
		.RequiresCss(new CssFile("~/libs/bootstrap-5.1.3-dist/css/bootstrap.css") { Order = 1 }); //Shared file
	//	.RequiresCss(new CssFile(ThemeHelper.GetThemedCssFile(thisTheme, "style.css")) { Order = 2 }); //Single Theme-specific file

	SmidgeHelper.CreateJsBundle($"{thisTheme}-head-js-bundle")
		.RequiresJs(new JavaScriptFile("~/libs/bootstrap-5.1.3-dist/js/bootstrap.js") { Order = 1 }); //Shared file

	SmidgeHelper.CreateJsBundle($"{thisTheme}-footer-js-bundle")
	//	.RequiresJs(new JavaScriptFile("~/scripts/lib/bootstrap.min.js") { Order = 1 }) //Shared file
		.RequiresJs(ThemeHelper.GetThemedAssetFolder(thisTheme, "scripts"));
}
<!DOCTYPE html>
<html>
<head>
	<!-- General Meta tags -->
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" />

	<title>MetaTitle</title>
	<meta name="description" content="MetaDescription">

	<link rel="shortcut icon" href="@Url.ThemedAsset(ThemeHelper, thisTheme, "images/favicon.ico")">

	<!-- Site-wide CSS -->
	<!-- Example of single themed file -->
	<link rel="stylesheet" href="@Url.ThemedAsset(ThemeHelper, thisTheme, "css/custom.css")" />

	<!-- Example of using Smidge bundles -->
	<environment names="Development">
		@await SmidgeHelper.CssHereAsync($"{thisTheme}-master-css-bundle",debug: true)
	</environment>
	<environment exclude="Development">
		@await SmidgeHelper.CssHereAsync($"{thisTheme}-master-css-bundle",debug: false)
	</environment>


	<!-- Site-wide HEAD Js -->
	<!-- Example of single themed file -->
	<script src="@Url.ThemedAsset(ThemeHelper,thisTheme, "js/myscript.js")"></script>
	<!-- Example of using Smidge bundles -->
	<environment names="Development">
		@await SmidgeHelper.JsHereAsync($"{thisTheme}-head-js-bundle",debug: true)
	</environment>
	<environment exclude="Development">
		@await SmidgeHelper.JsHereAsync($"{thisTheme}-head-js-bundle",debug: false)
	</environment>
	@RenderSection("HeadScripts", required: false)

</head>

<body class="BodyCss">
	<!-- PageType: @currentPage.ContentType.Alias -->
	@if (templateFilePath.StartsWith("~/Views"))
	{
		var themeFolder = ThemeHelper.GetThemePath(thisTheme) + "Views/";
		var templateName = templateFilePath.Replace("~/Views/", "");
		<!--Customize by creating a Template file named '@templateName' at '@themeFolder'-->
	}
	else
	{
		<!--Customize this Template at '@templateFilePath'-->
	}


	<div class="page">
		<div class="wrap">
			@Html.ThemedPartial(ThemeHelper, thisTheme, "_Header", Model)

			@RenderBody() @*CHILD TEMPLATE BODY HERE*@

		</div>

	@Html.ThemedPartial(ThemeHelper,thisTheme, "_Footer", Model)
		
	</div>

	<!-- Page Footer Script Section Start -->
	<environment names="Development">
		@await SmidgeHelper.JsHereAsync($"{thisTheme}-footer-js-bundle",debug: true)
	</environment>
	<environment exclude="Development">
		@await SmidgeHelper.JsHereAsync($"{thisTheme}-footer-js-bundle", debug: false)
	</environment>

	@RenderSection("FooterScripts", required: false)
</body>
</html>
